# ********RoostGPT********

# Test generated by RoostGPT for test intergration-test-artillery-gherkin-demo using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# ROOST_METHOD_HASH=87771cdd6d
# ROOST_METHOD_SIG_HASH=0a68a12aee
# 
#    ########## Scenario ##########  
# 
# {
#   background: 'Given the base URL is "http://localhost:8080"',
#   rule: null,
#   scenario: 'Delete authorization\r\n' +
#     '    Given authorization ID\r\n' +
#     '    When the client sends a DELETE request to "/authorizations/ID"\r\n' +
#     '    Then the response status code should be 200 for a successful delete\r\n' +
#     '    And the authorizations should not appear in GET request for "/authorizations"',
#   title: 'Delete authorization'
# }
# 

# ********RoostGPT********
config:
  target: "http://localhost:8080"
  phases:
    - duration: 10
      arrivalRate: 1
  variables:
    authorizationId: 
      - "1"
      - "2"
      - "3"
      - "4"

scenarios:
  - name: "Delete authorization and verify it is removed"
    flow:
      - get:
          url: "/authorizations"
          capture:
            json: "$.authorizations[0].id"
            as: "authorizationIdToDelete"
          expect:
            - hasProperty: authorizations
            - contentType: application/json
            - statusCode: 200
      - think: 2
      - delete:
          url: "/authorizations/{{ authorizationIdToDelete }}"
          expect:
            - statusCode: 204  
      - get:
          url: "/authorizations"
          expect:
            - hasProperty: authorizations
            - contentType: application/json  
            - statusCode: 200
            - jmesPath: length(authorizations[?id=='{{ authorizationIdToDelete }}']) == 0
      - log: "PASS: Authorization {{ authorizationIdToDelete }} was successfully deleted and no longer appears in the authorizations list"

  - name: "Attempt to delete non-existent authorization"
    flow:  
      - delete:
          url: "/authorizations/{{ $loopElement }}"
          expect:
            - statusCode: 404
      - log: "PASS: Attempting to delete non-existent authorization {{ $loopElement }} returned 404 Not Found as expected"
    loop: 
      - 99999
      - 88888
      - 77777
      - 66666

  - name: "Delete authorization with invalid ID format"
    flow:
      - delete:  
          url: "/authorizations/invalid-id-format"
          expect:
            - statusCode: 400
      - log: "PASS: Attempting to delete authorization with invalid ID format returned 400 Bad Request as expected"
