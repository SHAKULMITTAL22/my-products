// Test generated by RoostGPT for test rest-assured-metric using AI Type Open AI and AI Model gpt-4


// Test generated for /v2.0/metering/metering-labels/{metering_label_id}_get for http method type GET in rest-assured framework


// RoostTestHash=a7069bdb0c


package com.bootexample4.RoostTest;

import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import io.restassured.response.Response;
import org.junit.Test;
import static io.restassured.RestAssured.given;
import static org.hamcrest.Matchers.*;
import static org.junit.Assert.*;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

public class metering-labels_metering_label_idGetTest {
  
    @Test  
    public void metering_labels_metering_label_id_get_Test() {  
        RestAssured.baseURI = System.getenv("BASE_URL");  
  
        try (BufferedReader reader = new BufferedReader(new FileReader("src/test/java/com/bootexample4/RoostTest/metering-labels_metering_label_id_get.csv"))) {  
            String headerLine = reader.readLine();  
            String[] headers = headerLine.split(",");  
  
            String line;  
            while ((line = reader.readLine()) != null) {  
                String[] data = line.split(",");  
  
                // Create a map of header to data  
                Map<String, String> map = new HashMap<>();  
                for (int i = 0; i < headers.length; i++) {  
                    map.put(headers[i], data[i]);  
                }  
                
                // Send GET request
                Response response = given()
                    .contentType(ContentType.JSON)
                    .pathParam("metering_label_id", map.get("metering_label_id"))
                .when()
                    .get("/v2.0/metering/metering-labels/{metering_label_id}")  
                .then() 
                    .extract().response();    
         
                // Validate response status code
                assertEquals(200, response.statusCode());
                System.out.println("Description: 200 response");
            }  
        } catch (IOException e) {  
            e.printStackTrace();  
        }  
    }
}
